#include <stdio.h>
#include <string.h>
#include <stdlib.h>

#define TRUE 1
#define FALSE 0

union groups {
    int intVal;
    float floatVal;
    char charVal;
};

void inputUnion(union groups *g) {
    char buffer[100]; //문자열을 저장할 임의의 변수 buffer 선언

    printf("정수, 실수 또는 문자를 입력하세요: ");
    fgets(buffer, sizeof(buffer), stdin); //stdin으로부터 입력을 받아서 buffer에 저장
    //즉, 키보드 입력(stdin)을 받아서 버퍼에 넣는 것이다, 
    //fgets(저장할 문자열, 그 문자열의 바이트 크기, 키보드로부터 입력받음)
    //fgets(버퍼변수, 버퍼크기, 입력스트림);
    //fgets는 엔터(개행 문자 \n)까지 포함해서 문자열을 읽어들임

    // 1. 정수인지 검사
    if (sscanf(buffer, "%d", &g->intVal) == TRUE && strchr(buffer, '.') == NULL) {
        //strchr(문자열, '찾을 문자') 찾을 문자가 처음 등장하는 위치의 포인터를 반환함
        //즉 우리가 제어할수없는 어떤 주소값이 반환된다
        //sscanf는 문자열을 받아서 원하는 값을 반환함
        printf("%d : 값, %p : 주소값\n", g->intVal, &g->intVal);
    }
    // 2. 실수인지 검사
    else if (sscanf(buffer, "%f", &g->floatVal) == TRUE) {
        printf("%f : 값, %p : 주소값\n", g->floatVal, &g->floatVal);
    }
    // 3. 문자 한 글자인지 검사
    else if (sscanf(buffer, " %c", &g->charVal) == TRUE && strlen(buffer) <= 2) {
        //strlen은 buffer의 문자열 길이를 나타내므로, 여기선 한 문자의 여부를 본다
        //한 문자 a라고 한다면 a와 그 뒤의 NULL값이 생기므로 2이하로 해야된다
        printf("%c : 값, %p : 주소값\n", g->charVal, &g->charVal);
    }
    else {
        printf("잘못된 입력값입니다.\n");
    }
}

int main() {
    
    union groups g;
    inputUnion(&g);
    return 0;
}